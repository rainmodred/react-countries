{"version":3,"sources":["components/ToggleTheme.js","components/Header.js","components/Search.js","components/Filter.js","utils.js","components/CountryItem.js","components/CountriesList.js","components/ErrorFallback.js","components/Spinner.js","api.js","hooks/queryHooks.js","pages/Homepage.js","components/CountryDetails.js","pages/Detail.js","components/Main.js","hooks/useDarkMode.js","styles/colors.js","styles/themes.js","styles/GlobalStyles.js","App.js","index.js"],"names":["Button","styled","button","Text","span","ToggleTheme","mode","onModeChange","icon","size","onClick","Container","div","theme","elementBackground","Content","HeaderText","Header","onThemeChange","InputContainer","Icon","Input","input","Search","onSearchChange","useTheme","color","text","onChange","event","target","value","toLowerCase","type","placeholder","aria-label","Filter","defaultValue","options","onFilterChange","aria-labelledby","filter","css","width","height","background","borderRadius","display","border","padding","arrow","marginTop","cursor","map","option","formatNumber","num","toString","replace","StyledLi","li","StyledLink","Link","Image","img","ItemData","h3","p","CountryItem","name","code","population","region","capital","flag","path","to","src","loading","alt","List","ul","CountriesList","countries","alpha3Code","ErrorFallback","error","style","whiteSpace","message","spin","keyframes","transform","Spinner","FaSpinner","animation","defaultProps","apiURL","client","endpoint","a","window","fetch","then","response","json","data","ok","Promise","reject","getAllCountries","staleTime","countryQuery","countryCode","queryClient","useQueryClient","queryKey","queryFn","getCountryByCode","initialData","getQueryData","find","country","SearchBar","REGIONS","Homepage","result","useQuery","retry","useCountries","isLoading","isError","useState","search","setSearch","setFilter","filteredCountries","console","log","filteredBySearch","includes","justifyContent","CountryLink","Column","CountryDetails","nativeName","subregion","topLevelDomain","currencies","languages","borders","maxWidth","flexDirection","fontSize","marginBottom","gap","join","flexWrap","Wrapper","children","Detail","useCountry","useParams","id","isSuccess","countryQueries","useQueries","every","q","c","FallbackComponent","AppRoutes","exact","Main","white","lightTheme","colors","darkTheme","GlobalStyles","styles","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","localStorage","getItem","setMode","useEffect","localMode","setItem","useDarkMode","seMode","QueryClientProvider","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKMA,EAASC,IAAOC,OAAV,+NAaNC,EAAOF,IAAOG,KAAV,iDAIK,SAASC,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aACpCC,EACK,UAATF,EAAmB,cAAC,IAAD,CAAeG,KAAK,SAAY,cAAC,IAAD,CAAQA,KAAK,SAElE,OACE,eAACT,EAAD,CAAQU,QAASH,EAAjB,UACGC,EACD,cAACL,EAAD,2BCxBN,IAAMQ,EAAYV,IAAOW,IAAV,0GAEC,qBAAGC,MAAkBC,qBAG/BC,EAAUd,IAAOW,IAAV,iPAaPI,EAAaf,IAAOG,KAAV,qEAKD,SAASa,EAAT,GAA0C,IAAxBX,EAAuB,EAAvBA,KAAMY,EAAiB,EAAjBA,cACrC,OACE,cAACP,EAAD,UACE,eAACI,EAAD,WACE,cAACC,EAAD,kCACA,cAACX,EAAD,CAAaC,KAAMA,EAAMC,aAAcW,S,0BC3BzCC,EAAiBlB,IAAOW,IAAV,yKACJ,qBAAGC,MAAkBC,qBAS/BM,EAAOnB,IAAOW,IAAV,iIAQJS,EAAQpB,IAAOqB,MAAV,gKASI,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,eACzBX,EAAQY,cACd,OACE,eAACN,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAiBM,MAAOb,EAAMc,SAEhC,cAACN,EAAD,CACEO,SAAU,SAAAC,GAAK,OAAIL,EAAeK,EAAMC,OAAOC,MAAMC,gBACrDC,KAAK,SACLC,YAAY,0BACZC,aAAW,c,uCC7BJ,SAASC,EAAT,GAA4D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eAChD1B,EAAQY,cAEd,OACE,YAAC,IAAD,CACEe,kBAAgB,WAChBH,aAAa,MACbT,SAAU,SAAAa,GAAM,OAAIF,EAAeE,IACnCC,IAAK,CACHC,MAAO,QACPC,OAAQ,OACRC,WAAW,GAAD,OAAKhC,EAAMC,mBACrBgC,aAAc,OARlB,UAWE,YAAC,IAAD,CACEJ,IAAK,CACHK,QAAS,OACTH,OAAQ,OACRI,OAAQ,OACRF,aAAc,MACdG,QAAS,QAEXC,MAAO,YAAC,IAAD,CAAsBzC,KAAK,WAGpC,YAAC,IAAD,CACEiC,IAAK,CACHS,UAAW,OACXL,aAAc,MACdD,WAAW,GAAD,OAAKhC,EAAMC,mBACrBsC,OAAQ,WALZ,SAQE,YAAC,IAAD,WACE,YAAC,IAAD,CAAerB,MAAM,MAArB,SAA4BM,IAC3BC,EAAQe,KAAI,SAAAC,GAAM,OACjB,YAAC,IAAD,CAAevB,MAAOuB,EAAtB,SACGA,GADgCA,cCpDxC,SAASC,EAAaC,GAC3B,OAAOA,EAAIC,WAAWC,QAAQ,0BAA2B,OCK3D,I,EAAMC,EAAW1D,IAAO2D,GAAV,4FACE,qBAAG/C,MAAkBC,qBAK/B+C,EAAa5D,YAAO6D,IAAP7D,CAAH,6KAUV8D,EAAQ9D,IAAO+D,IAAV,+GAOLC,EAAWhE,IAAOW,IAAV,8DAIRK,EAAShB,IAAOiE,GAAV,wEAKN/D,EAAOF,IAAOkE,EAAV,iFAMK,SAASC,GAAT,GAOX,IANFC,EAMC,EANDA,KACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,QACAC,EACC,EADDA,KAEMC,EAAI,iBAAaL,GAEvB,OACE,cAACX,EAAD,UACE,eAACE,EAAD,CAAYe,GAAID,EAAhB,UACE,cAACZ,EAAD,CAAOc,IAAKH,EAAMI,QAAQ,OAAOC,IAAG,kBAAaV,KACjD,eAACJ,EAAD,WACE,cAAC,EAAD,UAASI,IACT,eAAC,EAAD,WACE,4CADF,IACsBd,EAAagB,MAEnC,eAAC,EAAD,WACE,wCADF,IACkBC,KAElB,eAAC,EAAD,WACE,yCADF,IACmBC,aC9D7B,IAAMO,GAAO/E,IAAOgF,GAAV,sJAOK,SAASC,GAAT,GAAuC,IAAdC,EAAa,EAAbA,UACtC,OACE,cAACH,GAAD,UACGG,EAAU9B,KACT,gBAAG+B,EAAH,EAAGA,WAAYf,EAAf,EAAeA,KAAMK,EAArB,EAAqBA,KAAMH,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,OAAQC,EAA/C,EAA+CA,QAA/C,OACE,cAACL,GAAD,CAEEC,KAAMA,EACNC,KAAMc,EACNV,KAAMA,EACNH,WAAYA,EACZC,OAAQA,EACRC,QAASA,GANJW,QCfF,SAASC,GAAT,GAAmC,IAAVC,EAAS,EAATA,MACtC,OACE,sDACsB,IACpB,qBAAKC,MAAO,CAAEC,WAAY,UAA1B,SAAuCF,EAAMG,a,sBCH7CC,GAAOC,aAAU,CACrB,KAAM,CAAEC,UAAW,gBACnB,OAAQ,CAAEA,UAAW,oBAGjBC,GAAU5F,YAAO6F,KAAP7F,CAAkB,CAChC8F,UAAU,GAAD,OAAKL,GAAL,yBAGXG,GAAQG,aAAe,CACrB,aAAc,W,mDCdVC,GAAS,gC,SAEAC,G,mFAAf,WAAsBC,GAAtB,UAAAC,EAAA,+EACSC,OAAOC,MAAP,UAAgBL,GAAhB,YAA0BE,IAAYI,KAAtC,yCAA2C,WAAMC,GAAN,gBAAAJ,EAAA,sEAC7BI,EAASC,OADoB,UAC1CC,EAD0C,QAE5CF,EAASG,GAFmC,yCAGvCD,GAHuC,gCAKvCE,QAAQC,OAAOH,IALwB,2CAA3C,wDADT,4C,+BAWeI,K,gFAAf,uBAAAV,EAAA,+EACSF,GAAO,QADhB,4C,sEAIA,WAAgC5B,GAAhC,UAAA8B,EAAA,+EACSF,GAAO,SAAD,OAAU5B,KADzB,4C,sBCdA,I,GAAMyC,GAAY,IAclB,SAASC,GAAaC,GACpB,IAAMC,EAAcC,cACpB,MAAO,CACLC,SAAU,CAAC,UAAWH,GACtBI,QAAS,kB,4CAAMC,CAAiBL,IAChCM,YAAa,WAAO,IAAD,EACjB,iBAAOL,EACJM,aAAa,oBADhB,aAAO,EAEHC,MAAK,SAAAC,GAAO,OAAIA,EAAQtC,aAAe6B,MAE7CF,cChBJ,IAAMY,GAAY1H,IAAOW,IAAV,oMAWTgH,GAAU,CAAC,SAAU,WAAY,OAAQ,SAAU,WAE1C,SAASC,KAAY,IAAD,EDnBnC,WACE,IAAMX,EAAcC,cACdW,EAASC,aAAS,YAAajB,GAAiB,CACpDkB,MAAO,EACPjB,aACAQ,YAAa,WACX,OAAOL,EAAYM,aAAa,gBAGpC,OAAO,6BAAKM,GAAZ,IAAoB3C,UAAW2C,EAAOpB,OCWWuB,GAAzCC,EADyB,EACzBA,UAAWC,EADc,EACdA,QAAS7C,EADK,EACLA,MAAOH,EADF,EACEA,UADF,EAGLiD,mBAAS,IAHJ,mBAG1BC,EAH0B,KAGlBC,EAHkB,OAILF,mBAAS,IAJJ,mBAI1B3F,EAJ0B,KAIlB8F,EAJkB,KAcjC,IAAMC,EAPW,KAAX/F,GAA4B,QAAXA,EACZ0C,GAETsD,QAAQC,IAAIjG,GACZ,OAAO0C,QAAP,IAAOA,OAAP,EAAOA,EAAW1C,QAAO,qBAAG+B,SAAwB/B,MAIhDkG,GACa,OAAjBH,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB/F,QAAO,qBAAG4B,KACtBrC,cAAc4G,SAASP,QACzB,GAEP,OACE,2BACE,YAACV,GAAD,WACE,YAACpG,EAAD,CAAQC,eAAgB8G,IACxB,YAAClG,EAAD,CACEC,aAAc,mBACdE,eAAgBgG,EAChBjG,QAASsF,QAGZM,GACC,mBACExF,IAAK,CACHK,QAAS,OACT8F,eAAgB,UAHpB,SAME,YAAChD,GAAD,MAGHsC,EACC,YAAC9C,GAAD,CAAeC,MAAOA,IAEtB,YAACJ,GAAD,CAAeC,UAAWwD,O,8CCzD5BhI,GAAYV,IAAOW,IAAV,qNAUTkI,GAAc7I,YAAO6D,IAAP7D,CAAH,8IAOX8I,GAAS9I,IAAOW,IAAV,6FAMG,SAASoI,GAAT,GAYX,IAXF3E,EAWC,EAXDA,KACA4E,EAUC,EAVDA,WACAvE,EASC,EATDA,KACAH,EAQC,EARDA,WACAC,EAOC,EAPDA,OACA0E,EAMC,EANDA,UACAzE,EAKC,EALDA,QACA0E,EAIC,EAJDA,eACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,UACAC,EACC,EADDA,QAEA,OACE,YAAC,GAAD,WACE,mBACE5G,IAAK,CACH6G,SAAU,QAEZ1E,IAAKH,EACLK,IAAG,kBAAaV,KAElB,mBACE3B,IAAK,CACHK,QAAS,OACTyG,cAAe,SACfX,eAAgB,UAJpB,UAOE,kBACEnG,IAAK,CACH+G,SAAU,OACVC,aAAc,QAHlB,SAMGrF,IAEH,mBACE3B,IAAG,cACDK,QAAS,OACT8F,eAAgB,gBAChBa,aAAc,QACb,4BAA8B,CAC7BF,cAAe,SACfG,IAAK,SAPX,UAWE,YAACZ,GAAD,WACE,2BACE,4CACCE,KAEH,2BACE,2CACC1F,EAAagB,MAEhB,2BACE,uCACCC,KAEH,2BACE,2CACC0E,KAEH,2BACE,wCACCzE,QAGL,YAACsE,GAAD,WACE,2BACE,iDACCI,EAAeS,KAAK,SAEvB,2BACE,2CACCR,EAAW/F,KAAI,qBAAGgB,QAAiBuF,KAAK,SAE3C,2BACE,0CACCP,EAAUhG,KAAI,qBAAGgB,QAAiBuF,KAAK,eAI9C,mBACElH,IAAK,CACHK,QAAS,OACT4G,IAAK,OACL,4BAA6B,CAC3BH,cAAe,WALrB,UASE,iBACE9G,IAAK,CACH8C,WAAY,UAFhB,+BAOA,kBACE9C,IAAK,CACHK,QAAS,OACT4G,IAAK,YACLE,SAAU,QAJd,SAOGP,EAAQjG,KAAI,YAAqB,IAAlBgB,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACpB,OACE,2BACE,YAACwE,GAAD,CAAalE,GAAE,kBAAaN,GAA5B,SAAqCD,KAD9BC,iBC/HzB,I,GAAM3D,GAAYV,IAAOW,IAAV,kDAITiD,GAAa5D,YAAO6D,IAAP7D,CAAH,0UAiBhB,SAAS6J,GAAT,GAAgC,IAAbC,EAAY,EAAZA,SACjB,OACE,YAAC,GAAD,WACE,YAAC,GAAD,CAAYnF,GAAG,IAAf,UACE,YAAC,IAAD,IADF,UAIA,mBACElC,IAAK,CACHK,QAAS,OACT8F,eAAgB,UAHpB,SAMGkB,OAUM,SAASC,KAAU,IAAD,IH7BjC,SAAoB/C,GAClB,IAAMa,EAASC,aAASf,GAAaC,IAErC,OAAO,6BAAKa,GAAZ,IAAoBJ,QAASI,EAAOpB,OG6BoBuD,CAFzCC,cAAPC,IAEFC,EAHyB,EAGzBA,UAAWjC,EAHc,EAGdA,QAASD,EAHK,EAGLA,UAAWR,EAHN,EAGMA,QAASpC,EAHf,EAGeA,MAE1CgE,GAAiB,QAAP,EAAA5B,SAAA,eAAS4B,UAAW,GAE5Be,EAAiBC,aAAU,OAAChB,QAAD,IAACA,OAAD,EAACA,EAASjG,KAAI,SAAAiB,GAAI,OAAI0C,GAAa1C,OAYpE,GAVI+F,EAAeE,OAAM,SAAAC,GAAC,OAAIA,EAAEJ,eAC9B1C,EAAO,6BACFA,GADE,IAEL4B,QAASe,EAAehH,KAAI,SAAAoH,GAAC,MAAK,CAChCpG,KAAMoG,EAAE/D,KAAKrC,KACbC,KAAMmG,EAAE/D,KAAKtB,kBAKf8C,EACF,OACE,YAAC4B,GAAD,UACE,YAACjE,GAAD,MAKN,GAAIsC,EACF,OACE,YAAC2B,GAAD,UACE,YAACzE,GAAD,CAAeC,MAAOA,MAK5B,GAAI8E,EAAW,CAAC,IAAD,EAaT1C,EAXFrD,EAFW,EAEXA,KACA4E,EAHW,EAGXA,WACAvE,EAJW,EAIXA,KACAH,EALW,EAKXA,WACAC,EANW,EAMXA,OACA0E,EAPW,EAOXA,UACAzE,EARW,EAQXA,QACA0E,EATW,EASXA,eACAC,EAVW,EAUXA,WACAC,EAXW,EAWXA,UACAC,EAZW,EAYXA,QAEF,OACE,YAACQ,GAAD,UACE,YAAC,iBAAD,CAAeY,kBAAmBrF,GAAlC,SACE,YAAC2D,GAAD,CACE3E,KAAMA,EACN4E,WAAYA,EACZvE,KAAMA,EACNH,WAAYA,EACZC,OAAQA,EACR0E,UAAWA,EACXzE,QAASA,EACT0E,eAAgBA,EAChBC,WAAYA,EACZC,UAAWA,EACXC,QAASA,SCrHrB,IAAMvI,GAAUd,IAAOW,IAAV,yLAUb,SAAS+J,KACP,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACjG,KAAK,IAAlB,SACE,cAACkD,GAAD,MAEF,cAAC,IAAD,CAAO+C,OAAK,EAACjG,KAAK,cAAlB,SACE,cAACqF,GAAD,MAEF,cAAC,IAAD,CAAOY,OAAK,EAACjG,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUC,GAAG,aAOR,SAASiG,KACtB,OACE,cAAC,GAAD,UACE,cAACF,GAAD,MCnCC,I,MCGMG,GAAQ,mBCHRC,GAAa,CACxBlI,WDCuB,kBCAvB/B,kBAAmBkK,GACnBrJ,KDH0B,qBCMfsJ,GAAY,CACvBpI,WDRwB,qBCSxB/B,kBDVwB,qBCWxBa,KAAMqJ,ICJO,SAASE,KACtB,IAAMrK,EAAQY,cAEd,OACE,YAAC,KAAD,CACE0J,OAAQzI,aAAF,iuBAgBY7B,EAAMgC,WACXhC,EAAMc,KAaDd,EAAMC,kBACXD,EAAMc,QChCzB,IAAMhB,GAAYV,IAAOW,IAAV,mHAMTsG,GAAc,IAAIkE,IAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,MAsBbC,OAjBf,WAAgB,IAAD,EJvBY,WAAO,IAAD,EACPpD,oBACtB,kBAAM/B,OAAOoF,aAAaC,QAAQ,SAAW,UAFhB,mBACxBpL,EADwB,KAClBqL,EADkB,KAoB/B,OALAC,qBAAU,WACR,IAAMC,EAAYxF,OAAOoF,aAAaC,QAAQ,QAC9CG,GAAaF,EAAQE,KACpB,IAEI,CAACvL,EAfR,WACe,UAATA,GACF+F,OAAOoF,aAAaK,QAAQ,OAAQ,QACpCH,EAAQ,UAERtF,OAAOoF,aAAaK,QAAQ,OAAQ,SACpCH,EAAQ,YIaWI,GADV,mBACNzL,EADM,KACA0L,EADA,KAGb,OACE,eAACC,EAAA,EAAD,CAAqB/F,OAAQgB,GAA7B,UACE,eAAC,IAAD,CAAerG,MAAgB,UAATP,EAAmByK,GAAaE,GAAtD,UACE,cAACC,GAAD,IACA,eAAC,GAAD,WACE,cAACjK,EAAD,CAAQX,KAAMA,EAAMY,cAAe8K,IACnC,cAACnB,GAAD,UAGJ,cAAC,qBAAD,CAAoBqB,eAAe,QChCzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.93be2914.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\nimport { IoMoon, IoMoonOutline } from 'react-icons/io5'\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n  background: none;\n  border: none;\n  padding: 5px;\n  font-size: 14px;\n  font-family: inherit;\n  color: inherit;\n`\n\nconst Text = styled.span`\n  font-weight: 600;\n`\n\nexport default function ToggleTheme({ mode, onModeChange }) {\n  const icon =\n    mode === 'light' ? <IoMoonOutline size=\"18px\" /> : <IoMoon size=\"18px\" />\n\n  return (\n    <Button onClick={onModeChange}>\n      {icon}\n      <Text>Dark mode</Text>\n    </Button>\n  )\n}\n\nToggleTheme.propTypes = {\n  mode: PropTypes.string.isRequired,\n  onModeChange: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport ToggleTheme from './ToggleTheme'\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 0.2rem 0.4rem 0px;\n  background: ${({ theme }) => theme.elementBackground};\n`\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 100%;\n  align-items: center;\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 0 80px;\n  @media (max-width: 768px) {\n    padding: 0 30px;\n  }\n`\n\nconst HeaderText = styled.span`\n  font-size: 20px;\n  font-weight: 800;\n`\n\nexport default function Header({ mode, onThemeChange }) {\n  return (\n    <Container>\n      <Content>\n        <HeaderText>Where in the world?</HeaderText>\n        <ToggleTheme mode={mode} onModeChange={onThemeChange} />\n      </Content>\n    </Container>\n  )\n}\n\nHeader.propTypes = {\n  mode: PropTypes.string.isRequired,\n  onThemeChange: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { IoSearchOutline } from 'react-icons/io5'\nimport { useTheme } from '@emotion/react'\n\nconst InputContainer = styled.div`\n  background: ${({ theme }) => theme.elementBackground};\n  border-radius: 6px;\n  position: relative;\n  width: 100%;\n  @media (min-width: 769px) {\n    max-width: 480px;\n  }\n`\n\nconst Icon = styled.div`\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 30px;\n  transform: translateY(-50%);\n`\n\nconst Input = styled.input`\n  background: inherit;\n  border-radius: 6px;\n  color: inherit;\n  padding: 20px 10px 20px 75px;\n  border: none;\n  width: 100%;\n`\n\nexport default function Search({ onSearchChange }) {\n  const theme = useTheme()\n  return (\n    <InputContainer>\n      <Icon>\n        <IoSearchOutline color={theme.text} />\n      </Icon>\n      <Input\n        onChange={event => onSearchChange(event.target.value.toLowerCase())}\n        type=\"search\"\n        placeholder=\"Search for a country...\"\n        aria-label=\"Search\"\n      ></Input>\n    </InputContainer>\n  )\n}\n\nSearch.propTypes = {\n  onSearchChange: PropTypes.func.isRequired,\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { IoChevronDownOutline } from 'react-icons/io5'\nimport { useTheme } from '@emotion/react'\nimport {\n  ListboxButton,\n  ListboxInput,\n  ListboxList,\n  ListboxOption,\n  ListboxPopover,\n} from '@reach/listbox'\nimport '@reach/listbox/styles.css'\n\nexport default function Filter({ defaultValue, options, onFilterChange }) {\n  const theme = useTheme()\n\n  return (\n    <ListboxInput\n      aria-labelledby=\"my-label\"\n      defaultValue=\"all\"\n      onChange={filter => onFilterChange(filter)}\n      css={{\n        width: '200px',\n        height: '55px',\n        background: `${theme.elementBackground}`,\n        borderRadius: '6px',\n      }}\n    >\n      <ListboxButton\n        css={{\n          display: 'flex',\n          height: '100%',\n          border: 'none',\n          borderRadius: '6px',\n          padding: '22px',\n        }}\n        arrow={<IoChevronDownOutline size=\"16px\" />}\n      />\n\n      <ListboxPopover\n        css={{\n          marginTop: '10px',\n          borderRadius: '6px',\n          background: `${theme.elementBackground}`,\n          cursor: 'pointer',\n        }}\n      >\n        <ListboxList>\n          <ListboxOption value=\"all\">{defaultValue}</ListboxOption>\n          {options.map(option => (\n            <ListboxOption value={option} key={option}>\n              {option}\n            </ListboxOption>\n          ))}\n        </ListboxList>\n      </ListboxPopover>\n    </ListboxInput>\n  )\n}\n\nFilter.propTypes = {\n  defaultValue: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n","export function formatNumber(num) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport styled from '@emotion/styled'\nimport { formatNumber } from '../utils'\n\nconst StyledLi = styled.li`\n  background: ${({ theme }) => theme.elementBackground};\n  border-radius: 6px;\n  overflow: hidden;\n`\n\nconst StyledLink = styled(Link)`\n  display: grid;\n  grid-template-rows: 160px auto;\n  cursor: pointer;\n  transition: opacity 400ms ease;\n  &:hover {\n    opacity: 0.8;\n  }\n`\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`\n\nconst ItemData = styled.div`\n  width: 100%;\n  padding: 25px;\n`\nconst Header = styled.h3`\n  font-size: 18px;\n  margin-bottom: 20px;\n`\n\nconst Text = styled.p`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`\n\nexport default function CountryItem({\n  name,\n  code,\n  population,\n  region,\n  capital,\n  flag,\n}) {\n  const path = `detail/${code}`\n\n  return (\n    <StyledLi>\n      <StyledLink to={path}>\n        <Image src={flag} loading=\"lazy\" alt={`Flag of ${name}`} />\n        <ItemData>\n          <Header>{name}</Header>\n          <Text>\n            <b>Population:</b> {formatNumber(population)}\n          </Text>\n          <Text>\n            <b>Region:</b> {region}\n          </Text>\n          <Text>\n            <b>Capital:</b> {capital}\n          </Text>\n        </ItemData>\n      </StyledLink>\n    </StyledLi>\n  )\n}\n\nCountryItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  code: PropTypes.string.isRequired,\n  population: PropTypes.number.isRequired,\n  region: PropTypes.string.isRequired,\n  capital: PropTypes.string,\n  flag: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport CountryItem from './CountryItem'\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(0, 260px));\n  gap: 75px;\n  justify-content: center;\n`\n\nexport default function CountriesList({ countries }) {\n  return (\n    <List>\n      {countries.map(\n        ({ alpha3Code, name, flag, population, region, capital }) => (\n          <CountryItem\n            key={alpha3Code}\n            name={name}\n            code={alpha3Code}\n            flag={flag}\n            population={population}\n            region={region}\n            capital={capital}\n          ></CountryItem>\n        ),\n      )}\n    </List>\n  )\n}\n\nCountriesList.propTypes = {\n  countries: PropTypes.array.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ErrorFallback({ error }) {\n  return (\n    <div>\n      There was an error:{' '}\n      <pre style={{ whiteSpace: 'normal' }}>{error.message}</pre>\n    </div>\n  )\n}\n\nErrorFallback.propTypes = {\n  error: PropTypes.object,\n}\n","import { keyframes } from '@emotion/react'\nimport { FaSpinner } from 'react-icons/fa'\nimport styled from '@emotion/styled/'\n\nconst spin = keyframes({\n  '0%': { transform: 'rotate(0deg)' },\n  '100%': { transform: 'rotate(360deg)' },\n})\n\nconst Spinner = styled(FaSpinner)({\n  animation: `${spin} 1s linear infinite`,\n})\n\nSpinner.defaultProps = {\n  'aria-label': 'loading',\n}\n\nexport { Spinner }\n","const apiURL = 'https://restcountries.com/v2/'\n\nasync function client(endpoint) {\n  return window.fetch(`${apiURL}/${endpoint}`).then(async response => {\n    const data = await response.json()\n    if (response.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nasync function getAllCountries() {\n  return client('all')\n}\n\nasync function getCountryByCode(code) {\n  return client(`alpha/${code}`)\n}\n\nexport { getAllCountries, getCountryByCode }\n","import { useQuery, useQueryClient } from 'react-query'\nimport { getAllCountries, getCountryByCode } from '../api'\n\nconst staleTime = 60 * 5000\n\nfunction useCountries() {\n  const queryClient = useQueryClient()\n  const result = useQuery('countries', getAllCountries, {\n    retry: 1,\n    staleTime,\n    initialData: () => {\n      return queryClient.getQueryData('countries')\n    },\n  })\n  return { ...result, countries: result.data }\n}\n\nfunction countryQuery(countryCode) {\n  const queryClient = useQueryClient()\n  return {\n    queryKey: ['country', countryCode],\n    queryFn: () => getCountryByCode(countryCode),\n    initialData: () => {\n      return queryClient\n        .getQueryData('countries')\n        ?.find(country => country.alpha3Code === countryCode)\n    },\n    staleTime,\n  }\n}\n\nfunction useCountry(countryCode) {\n  const result = useQuery(countryQuery(countryCode))\n\n  return { ...result, country: result.data }\n}\n\nexport { useCountries, useCountry, countryQuery }\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport Search from '../components/Search'\nimport Filter from '../components/Filter'\nimport CountriesList from '../components/CountriesList'\nimport ErrorFallback from '../components/ErrorFallback'\nimport { Spinner } from '../components/Spinner'\nimport { useCountries } from '../hooks/queryHooks'\n\nconst SearchBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 45px 0;\n  gap: 10%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 30px;\n  }\n`\n\nconst REGIONS = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania']\n\nexport default function Homepage() {\n  const { isLoading, isError, error, countries } = useCountries()\n\n  const [search, setSearch] = useState('')\n  const [filter, setFilter] = useState('')\n\n  function filterByRegion() {\n    if (filter === '' || filter === 'all') {\n      return countries\n    }\n    console.log(filter)\n    return countries?.filter(({ region }) => region === filter)\n  }\n\n  const filteredCountries = filterByRegion()\n  const filteredBySearch =\n    filteredCountries?.filter(({ name }) =>\n      name.toLowerCase().includes(search),\n    ) || []\n\n  return (\n    <>\n      <SearchBar>\n        <Search onSearchChange={setSearch} />\n        <Filter\n          defaultValue={'Filter by Region'}\n          onFilterChange={setFilter}\n          options={REGIONS}\n        />\n      </SearchBar>\n      {isLoading && (\n        <div\n          css={{\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <Spinner></Spinner>\n        </div>\n      )}\n      {isError ? (\n        <ErrorFallback error={error}></ErrorFallback>\n      ) : (\n        <CountriesList countries={filteredBySearch} />\n      )}\n    </>\n  )\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx } from '@emotion/react'\nimport { Link } from 'react-router-dom'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { formatNumber } from '../utils'\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  column-gap: 120px;\n  @media (max-width: 1100px) {\n    grid-template-columns: 1fr;\n    row-gap: 50px;\n  }\n`\n\nconst CountryLink = styled(Link)`\n  border-radius: 6px;\n  padding: 6px 24px;\n  box-shadow: 0 0 4px 0 rgb(0 0 0 / 29%);\n  white-space: nowrap;\n`\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`\n\nexport default function CountryDetails({\n  name,\n  nativeName,\n  flag,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies,\n  languages,\n  borders,\n}) {\n  return (\n    <Container>\n      <img\n        css={{\n          maxWidth: '100%',\n        }}\n        src={flag}\n        alt={`Flag of ${name}`}\n      ></img>\n      <div\n        css={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <h3\n          css={{\n            fontSize: '24px',\n            marginBottom: '35px',\n          }}\n        >\n          {name}\n        </h3>\n        <div\n          css={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '75px',\n            ['@media (max-width: 768px)']: {\n              flexDirection: 'column',\n              gap: '50px',\n            },\n          }}\n        >\n          <Column>\n            <p>\n              <b>Native Name: </b>\n              {nativeName}\n            </p>\n            <p>\n              <b>Population: </b>\n              {formatNumber(population)}\n            </p>\n            <p>\n              <b>Region: </b>\n              {region}\n            </p>\n            <p>\n              <b>Sub Region: </b>\n              {subregion}\n            </p>\n            <p>\n              <b>Capital: </b>\n              {capital}\n            </p>\n          </Column>\n          <Column>\n            <p>\n              <b>Top Level Domain: </b>\n              {topLevelDomain.join(', ')}\n            </p>\n            <p>\n              <b>Currencies: </b>\n              {currencies.map(({ name }) => name).join(', ')}\n            </p>\n            <p>\n              <b>Languages: </b>\n              {languages.map(({ name }) => name).join(', ')}\n            </p>\n          </Column>\n        </div>\n        <div\n          css={{\n            display: 'flex',\n            gap: '10px',\n            '@media (max-width: 768px)': {\n              flexDirection: 'column',\n            },\n          }}\n        >\n          <b\n            css={{\n              whiteSpace: 'nowrap',\n            }}\n          >\n            Border Countries:\n          </b>\n          <ul\n            css={{\n              display: 'flex',\n              gap: '20px 10px',\n              flexWrap: 'wrap',\n            }}\n          >\n            {borders.map(({ name, code }) => {\n              return (\n                <li key={code}>\n                  <CountryLink to={`/detail/${code}`}>{name}</CountryLink>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nCountryDetails.propTypes = {\n  name: PropTypes.string.isRequired,\n  nativeName: PropTypes.string.isRequired,\n  flag: PropTypes.string.isRequired,\n  population: PropTypes.number.isRequired,\n  region: PropTypes.string.isRequired,\n  subregion: PropTypes.string.isRequired,\n  capital: PropTypes.string.isRequired,\n  topLevelDomain: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  currencies: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n  languages: PropTypes.arrayOf(\n    PropTypes.shape({\n      iso639_1: PropTypes.string.isRequired,\n      iso639_2: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nativeName: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  borders: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      code: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx } from '@emotion/react'\n\nimport React from 'react'\nimport { useQueries } from 'react-query'\nimport PropTypes from 'prop-types'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { Link, useParams } from 'react-router-dom'\nimport styled from '@emotion/styled'\nimport { IoArrowBackOutline } from 'react-icons/io5'\nimport CountryDetails from '../components/CountryDetails'\nimport ErrorFallback from '../components/ErrorFallback'\nimport { Spinner } from '../components/Spinner'\nimport { useCountry, countryQuery } from '../hooks/queryHooks'\n\nconst Container = styled.div`\n  font-size: 16px;\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  border: none;\n  border-radius: 6px;\n  box-shadow: 0 0 7px 0 rgb(0 0 0 / 29%);\n  padding: 10px 0;\n  width: 136px;\n  font-size: 16px;\n  margin: 65px 0;\n  @media (max-width: 768px) {\n    margin: 50px 0;\n  }\n`\n\nfunction Wrapper({ children }) {\n  return (\n    <Container>\n      <StyledLink to=\"/\">\n        <IoArrowBackOutline></IoArrowBackOutline>\n        Back\n      </StyledLink>\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        {children}\n      </div>\n    </Container>\n  )\n}\n\nWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n}\n\nexport default function Detail() {\n  const { id } = useParams()\n\n  let { isSuccess, isError, isLoading, country, error } = useCountry(id)\n\n  let borders = country?.borders || []\n\n  const countryQueries = useQueries(borders?.map(code => countryQuery(code)))\n\n  if (countryQueries.every(q => q.isSuccess)) {\n    country = {\n      ...country,\n      borders: countryQueries.map(c => ({\n        name: c.data.name,\n        code: c.data.alpha3Code,\n      })),\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <Wrapper>\n        <Spinner />\n      </Wrapper>\n    )\n  }\n\n  if (isError) {\n    return (\n      <Wrapper>\n        <ErrorFallback error={error}></ErrorFallback>\n      </Wrapper>\n    )\n  }\n\n  if (isSuccess) {\n    const {\n      name,\n      nativeName,\n      flag,\n      population,\n      region,\n      subregion,\n      capital,\n      topLevelDomain,\n      currencies,\n      languages,\n      borders,\n    } = country\n    return (\n      <Wrapper>\n        <ErrorBoundary FallbackComponent={ErrorFallback}>\n          <CountryDetails\n            name={name}\n            nativeName={nativeName}\n            flag={flag}\n            population={population}\n            region={region}\n            subregion={subregion}\n            capital={capital}\n            topLevelDomain={topLevelDomain}\n            currencies={currencies}\n            languages={languages}\n            borders={borders}\n          />\n        </ErrorBoundary>\n      </Wrapper>\n    )\n  }\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport styled from '@emotion/styled'\nimport Homepage from '../pages/Homepage'\nimport Detail from '../pages/Detail'\n\nconst Content = styled.div`\n  padding: 0 80px 20px 80px;\n  max-width: 1440px;\n  margin: 0 auto;\n  width: 100%;\n  @media (max-width: 768px) {\n    padding: 0 30px 20px 30px;\n  }\n`\n\nfunction AppRoutes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route exact path=\"/detail/:id\">\n          <Detail />\n        </Route>\n        <Route exact path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default function Main() {\n  return (\n    <Content>\n      <AppRoutes />\n    </Content>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nexport const useDarkMode = () => {\n  const [mode, setMode] = useState(\n    () => window.localStorage.getItem('mode') || 'dark',\n  )\n\n  function toggleMode() {\n    if (mode === 'light') {\n      window.localStorage.setItem('mode', 'dark')\n      setMode('dark')\n    } else {\n      window.localStorage.setItem('mode', 'light')\n      setMode('light')\n    }\n  }\n\n  useEffect(() => {\n    const localMode = window.localStorage.getItem('mode')\n    localMode && setMode(localMode)\n  }, [])\n\n  return [mode, toggleMode]\n}\n","export const darkBlueEl = 'hsl(209, 23%, 22%)'\nexport const darkBlueBG = 'hsl(207, 26%, 17%)'\nexport const darkBlueText = 'hsl(200, 15%, 8%)'\nexport const darkGray = 'hsl(0, 0%, 52%)'\nexport const lightGray = 'hsl(0, 0%, 98%)'\nexport const white = 'hsl(0, 0%, 100%)'\n","import * as colors from './colors'\n\nexport const lightTheme = {\n  background: colors.lightGray,\n  elementBackground: colors.white,\n  text: colors.darkBlueText,\n}\n\nexport const darkTheme = {\n  background: colors.darkBlueBG,\n  elementBackground: colors.darkBlueEl,\n  text: colors.white,\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx, ThemeProvider, useTheme } from '@emotion/react'\n\nimport React from 'react'\nimport { Global, css } from '@emotion/react'\n\nexport default function GlobalStyles() {\n  const theme = useTheme()\n\n  return (\n    <Global\n      styles={css`\n        html {\n          box-sizing: border-box;\n        }\n\n        *,\n        *::before,\n        *::after {\n          box-sizing: inherit;\n          margin: 0;\n          padding: 0;\n        }\n\n        body {\n          font-family: Nunito Sans, sans-serif;\n          font-size: 14px;\n          background: ${theme.background};\n          color: ${theme.text};\n        }\n\n        ul {\n          list-style: none;\n        }\n\n        a {\n          text-decoration: none;\n        }\n\n        button,\n        a {\n          background: ${theme.elementBackground};\n          color: ${theme.text};\n          cursor: pointer;\n          transition: opacity 200ms ease;\n          :hover {\n            opacity: 0.8;\n          }\n        }\n      `}\n    />\n  )\n}\n","import React from 'react'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ThemeProvider } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport { useDarkMode } from './hooks/useDarkMode'\nimport { darkTheme, lightTheme } from './styles/themes'\nimport GlobalStyles from './styles/GlobalStyles'\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 80px 1fr;\n  row-gap: 5px;\n  height: 100%;\n`\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n})\n\nfunction App() {\n  const [mode, seMode] = useDarkMode()\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={mode === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <Container>\n          <Header mode={mode} onThemeChange={seMode} />\n          <Main />\n        </Container>\n      </ThemeProvider>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}